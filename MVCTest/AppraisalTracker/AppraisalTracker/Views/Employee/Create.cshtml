@model AppraisalTracker.Models.Employee

@{
    ViewBag.Title = "Create";
}


<div class="create-section py-5">
    <div class="container">
        @using (Html.BeginForm("Create", "Employee", FormMethod.Post))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.EmpName)
                    @Html.EditorFor(model => model.EmpName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.EmpName, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Contact)
                    @Html.EditorFor(model => model.Contact, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Contact, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.JoinDate)
                    @Html.EditorFor(model => model.JoinDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.JoinDate, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Salary)
                    @Html.EditorFor(model => model.Salary, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Salary, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.TotalExperience)
                    @Html.EditorFor(model => model.TotalExperience, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TotalExperience, "", new { @class = "text-danger" })
                </div>

                <div class="form-group d-flex align-items-center justify-content-center">
                    <input type="submit" value="Create" class="btn btn-success flex-grow-1 mr-3" />
                    @Html.ActionLink("Back to List", "Index", "Employee", new { @class = "btn btn-outline-info flex-grow-1 ml-3" })
                </div>
            </div>
        }
    </div>
</div>
